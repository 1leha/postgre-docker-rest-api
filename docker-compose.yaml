version: "3.8"
services:
  db:
    image: postgres:14.1-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  # app:
  #   image: postgre-docker-rest-api
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - db
  #   environment:
  #     # DB_HOST: db
  #     DB_USER: postgres
  #     DB_PASSWORD: postgres
  #     DB_NAME: postgres

volumes:
  db:
    driver: local
# version: "3.8"
# services:
#   db:
#     container_name: test_db
#     image: postgres:alpine3.17
#     restart: always
#     environment:
#       - POSTGRES_USER=test
#       - POSTGRES_PASSWORD=test
#     ports:
#       - "5432:5432"
#     volumes:
#       - db:/var/lib/postgresql/data

#   api:
#     container_name: test_api
#     build:
#       context: ./
#       target: production
#     image: test_api
#     depends_on:
#       - db

#     ports:
#       - 3000:3000
#     environment:
#       DB_HOST: db
#       DB_USER: test_db
#       DB_PASSWORD: test
#       DB_NAME: test

# volumes:
#   db:
#     driver: local
# -------------------------------

# version: '3.8'
# services:
#   db:
#     image: postgres:14.1-alpine
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     ports:
#       - '5432:5432'
# volumes:
#   - db:/var/lib/postgresql/data
#   - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
#   api:
#     container_name: postgre-docker-rest-api
#     build:
#       context: ./
#       target: production
#     image: postgre-docker-rest-api
#     depends_on:
#       - db
#     ports:
#       - 3000:3000
#     environment:
#       NODE_ENV: production
#       DB_HOST: db
#       DB_PORT: 5432
#       DB_USER: postgres
#       DB_PASSWORD: postgres
#       DB_NAME: postgres
#     links:
#       - db
#     volumes:
#       - ./:/src
#       - /src/node_modules
# volumes:
#   db:
#     driver: local
